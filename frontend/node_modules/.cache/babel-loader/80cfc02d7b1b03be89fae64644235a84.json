{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload; // search in the state.cartItems array\n      // for the existence of the specific product\n      // that is defined by item (by the action.payload)\n      // if we find a match assign the result to the existItem variable\n\n      const existItem = state.cartItems.find(x => x.product === item.product); // if there is already a product matching the item in the state.cartItems array\n\n      if (existItem) {\n        // return the existing state with adjusted cardItems\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/g/Desktop/react-projects/ReactShop/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,aAAL;AACE,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB,CADF,CAEE;AACA;AACA;AACA;;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB,CANF,CAQE;;AACA,UAAIH,SAAJ,EAAe;AACb;AACA,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFN,SAAP;AAMD,OARD,MAQO;AACL,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,SAAS,EAAE,CAACD,KAAK,CAACC,SAAP,EAAkBG,IAAlB;AAFN,SAAP;AAID;;AAEH;AACE,aAAOJ,KAAP;AA1BJ;AA4BD,CA7BM","sourcesContent":["import { CART_ADD_ITEM } from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      // search in the state.cartItems array\n      // for the existence of the specific product\n      // that is defined by item (by the action.payload)\n      // if we find a match assign the result to the existItem variable\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      // if there is already a product matching the item in the state.cartItems array\n      if (existItem) {\n        // return the existing state with adjusted cardItems\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [state.cartItems, item],\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}