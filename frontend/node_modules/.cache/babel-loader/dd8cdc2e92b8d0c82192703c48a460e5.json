{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";import{composeWithDevTools}from\"redux-devtools-extension\";import{productListReducer,productDetailsReducer,productCreateReducer,productUpdateReducer,productDeleteReducer,productTopRatedReducer,productReviewCreateReducer}from\"./reducers/productReducers\";import{orderCreateReducer,orderDetailsReducer,orderPayReducer,orderDeliverReducer,orderListMyReducer,orderListReducer}from\"./reducers/orderReducers\";import{userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer,userListReducer,userDeleteReducer,userUpdateReducer}from\"./reducers/userReducers\";import{cartReducer}from\"./reducers/cartReducers\";//all the reducers\nvar reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,cart:cartReducer,userLogin:userLoginReducer,userRegister:userRegisterReducer,userDetails:userDetailsReducer,userUpdateProfile:userUpdateProfileReducer,userList:userListReducer,userDelete:userDeleteReducer,productDelete:productDeleteReducer,productCreate:productCreateReducer,productReviewCreate:productReviewCreateReducer,productTopRated:productTopRatedReducer,productUpdate:productUpdateReducer,userUpdate:userUpdateReducer,orderCreate:orderCreateReducer,orderDetails:orderDetailsReducer,orderPay:orderPayReducer,orderDeliver:orderDeliverReducer,//user order listing\norderListMy:orderListMyReducer,orderList:orderListReducer});//get data and put it in DB\nvar cartItemsFromStorage=localStorage.getItem(\"cartItems\")?//If there are items in the DB, parse and return them\nJSON.parse(localStorage.getItem(\"cartItems\"))://otherwise, return an empty array/object depending on the type of data\n[];//userInfo\nvar userInfoFromStorage=localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null;//shipping address\nvar shippingAddressFromStorage=localStorage.getItem(\"shippingAddress\")?JSON.parse(localStorage.getItem(\"shippingAddress\")):{};var initialState={cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/Users/g/Desktop/react-projects/ReactShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productCreateReducer","productUpdateReducer","productDeleteReducer","productTopRatedReducer","productReviewCreateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListMyReducer","orderListReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","cartReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","productDelete","productCreate","productReviewCreate","productTopRated","productUpdate","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OACEC,kBADF,CAEEC,qBAFF,CAGEC,oBAHF,CAIEC,oBAJF,CAKEC,oBALF,CAMEC,sBANF,CAOEC,0BAPF,KAQO,4BARP,CASA,OACEC,kBADF,CAEEC,mBAFF,CAGEC,eAHF,CAIEC,mBAJF,CAKEC,kBALF,CAMEC,gBANF,KAOO,0BAPP,CAQA,OACEC,gBADF,CAEEC,mBAFF,CAGEC,kBAHF,CAIEC,wBAJF,CAKEC,eALF,CAMEC,iBANF,CAOEC,iBAPF,KAQO,yBARP,CASA,OAASC,WAAT,KAA4B,yBAA5B,CAEA;AACA,GAAMC,CAAAA,OAAO,CAAGzB,eAAe,CAAC,CAC9B0B,WAAW,CAAEtB,kBADiB,CAE9BuB,cAAc,CAAEtB,qBAFc,CAG9BuB,IAAI,CAAEJ,WAHwB,CAI9BK,SAAS,CAAEZ,gBAJmB,CAK9Ba,YAAY,CAAEZ,mBALgB,CAM9Ba,WAAW,CAAEZ,kBANiB,CAO9Ba,iBAAiB,CAAEZ,wBAPW,CAQ9Ba,QAAQ,CAAEZ,eARoB,CAS9Ba,UAAU,CAAEZ,iBATkB,CAU9Ba,aAAa,CAAE3B,oBAVe,CAW9B4B,aAAa,CAAE9B,oBAXe,CAY9B+B,mBAAmB,CAAE3B,0BAZS,CAa9B4B,eAAe,CAAE7B,sBAba,CAc9B8B,aAAa,CAAEhC,oBAde,CAe9BiC,UAAU,CAAEjB,iBAfkB,CAgB9BkB,WAAW,CAAE9B,kBAhBiB,CAiB9B+B,YAAY,CAAE9B,mBAjBgB,CAkB9B+B,QAAQ,CAAE9B,eAlBoB,CAmB9B+B,YAAY,CAAE9B,mBAnBgB,CAoB9B;AACA+B,WAAW,CAAE9B,kBArBiB,CAsB9B+B,SAAS,CAAE9B,gBAtBmB,CAAD,CAA/B,CAyBA;AACA,GAAM+B,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,EACzB;AACAC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAFyB,CAGzB;AACA,EAJJ,CAMA;AACA,GAAMG,CAAAA,mBAAmB,CAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,EACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,CAExB,IAFJ,CAIA;AACA,GAAMI,CAAAA,0BAA0B,CAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,CAE/B,EAFJ,CAIA,GAAMK,CAAAA,YAAY,CAAG,CACnB1B,IAAI,CAAE,CACJ2B,SAAS,CAAER,oBADP,CAEJS,eAAe,CAAEH,0BAFb,CADa,CAKnBxB,SAAS,CAAE,CAAE4B,QAAQ,CAAEL,mBAAZ,CALQ,CAArB,CAOA,GAAMM,CAAAA,UAAU,CAAG,CAACxD,KAAD,CAAnB,CACA,GAAMyD,CAAAA,KAAK,CAAG5D,WAAW,CACvB0B,OADuB,CAEvB6B,YAFuB,CAGvBnD,mBAAmB,CAACF,eAAe,MAAf,QAAmByD,UAAnB,CAAD,CAHI,CAAzB,CAMA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productDeleteReducer,\n  productTopRatedReducer,\n  productReviewCreateReducer,\n} from \"./reducers/productReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from \"./reducers/orderReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\n\n//all the reducers\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  productUpdate: productUpdateReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  //user order listing\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n});\n\n//get data and put it in DB\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? //If there are items in the DB, parse and return them\n    JSON.parse(localStorage.getItem(\"cartItems\"))\n  : //otherwise, return an empty array/object depending on the type of data\n    [];\n\n//userInfo\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\n//shipping address\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}